<?xml version="1.0" encoding="UTF-8"?>
<pythonPanelDocument>
  <!-- This file contains definitions of Python interfaces and the
 interfaces menu.  It should not be hand-edited when it is being
 used by the application.  Note, that two definitions of the
 same interface or of the interfaces menu are not allowed
 in a single file. -->
  <interface name="kinect" label="Kinect" icon="MISC_python" showNetworkNavigationBar="false" help_url="">
    <script><![CDATA[from hutil.Qt import QtWidgets,QtCore
from pykinect2 import PyKinectV2
from pykinect2.PyKinectV2 import *
from pykinect2 import PyKinectRuntime

timer_time = 100

class Kinterface(QtWidgets.QWidget):
    def __init__(self):
        super(Kinterface, self).__init__()
        mainLayout = QtWidgets.QGridLayout()
       
        StartButton = QtWidgets.QPushButton("Start")
        StartButton.clicked.connect(self.start)
        EndButton = QtWidgets.QPushButton("End")
        EndButton.clicked.connect(self.end)       
        
        
        mainLayout.addWidget(StartButton)
        mainLayout.addWidget(EndButton)        
        self.setLayout(mainLayout)
        
        # Timer
        self._timer = QtCore.QTimer()
        self._timer.timeout.connect(self.tick) 
        # Kinect Things
        self._kinect = None
        self._bodies = None
        self._add = None
            
    def start(self):
        print "Start"
        self._kinect = PyKinectRuntime.PyKinectRuntime(PyKinectV2.FrameSourceTypes_Body)
        self._timer.start(timer_time)   
        if self._add == None:
            self._add = hou.node("/obj/geo1").createNode("add","KinectAdd")
            self._add.parm("points").set(26)
    def end(self):
        self._kinect.close()  
        self._timer.stop()
        print "End"
        
    def tick(self):
        try:
            print self._kinect.has_new_body_frame()        
            '''
            if self._kinect.has_new_body_frame():  
                self._bodies = self._kinect.get_last_body_frame()
                                
                if self._bodies is not None: 
                    for i in range(0, self._kinect.max_body_count):
                        body = self._bodies.bodies[i]
                        if not body.is_tracked: 
                            continue 
                        
                        joints = body.joints 
                        for i in range(0,25):
                            x = joints[i].Position.x
                            y = joints[i].Position.y
                            z = joints[i].Position.z
                            
                            n = self._add
                            n.parm("usept" + str(i)).set(1)
                            n.parm("pt" + str(i) + "x").set(x)
                            n.parm("pt" + str(i) + "y").set(y)
                            n.parm("pt" + str(i) + "z").set(z)
            '''
        except:
            self.end()
            print "ERROR"
                        
                        
            
def createInterface():
    return Kinterface()]]></script>
    <includeInToolbarMenu menu_position="106" create_separator="false"/>
    <help><![CDATA[]]></help>
  </interface>
</pythonPanelDocument>
