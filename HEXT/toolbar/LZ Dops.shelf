<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="lz_dops" label="LZ Dops">
    <memberTool name="Break C based on tres"/>
    <memberTool name="Break by forces"/>
  </toolshelf>

  <tool name="Break by forces" label="Break by forces" icon="MISC_generic">
    <toolMenuContext name="network">
      <contextOpType>Sop/object_merge</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribpromote'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1 (Sop/object_merge)
set _obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1 = `run("opadd -e -n -v object_merge relationship_geometry1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1
opspareds '    group {  name    "folder0"       label   "Object Merge"          parm {      name        "xformtype"         baseparm        label       "Transform"         export      none    }       parm {      name        "xformpath"         baseparm        label       "Transform Object"          export      none    }       parm {      name        "invertxform"       baseparm        label       "Invert Transform"          export      none    }       parm {      name        "createptgroups"            baseparm        label       "Create Point Groups"       export      none    }       parm {      name        "ptgroupprefix"             baseparm        label       "Point Group Prefix"        export      none    }       parm {      name        "createprimgroups"          baseparm        label       "Create Primitive Groups"           export      none    }       parm {      name        "primgroupprefix"           baseparm        label       "Primitive Group Prefix"            export      none    }       parm {      name        "verbosegroups"             baseparm        label       "Verbose Group Names"       export      none    }       parm {      name        "createptstring"            baseparm        label       "Create Per-Point Path"             export      none    }       parm {      name        "createprimstring"          baseparm        label       "Create Per-Primitive Path"         export      none    }       parm {      name        "pathattrib"        baseparm        label       "Path Attribute"            export      none    }       parm {      name        "pack"      baseparm        label       "Pack Geometry Before Merging"      export      none    }       parm {      name        "pivot"             baseparm        label       "Pivot Location"            export      none    }       parm {      name        "viewportlod"       baseparm        label       "Display As"        export      none    }       parm {      name        "addpath"           baseparm        label       "Add Path Attribute"        export      none    }       parm {      name        "_separator"        baseparm        label       ""          export      none    }       multiparm {         name        "numobj"            label       "Number of Objects"         baseparm        default     1           parm {              name    "enable#"               baseparm                label   "Enable Merge #"                export  none        }       parm {              name    "objpath#"              baseparm                label   "Object #"              export  none        }       parm {              name    "group#"                baseparm                label   "Group #"               export  none        }       parm {              name    "expand#"               baseparm                label   "Expand Group #"                export  none        }   }      }      group {   name    "folder0_1"     label   "Custom Parameters"     parm {      name        "relnode"           label       "Relationship"      type        oppath      default     { "../.." }         range       { 0 1 }             parmtag     { "opfilter" "!!DOP!!" }            parmtag     { "oprelative" "." }    }     }      parm {     name    "suffixfirstgroup"      baseparm        label   "Add Suffix to First Group"     export  none     } ' $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1
opparm $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1  numobj ( 1 )
chblockbegin
chadd -t 0 0 $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1 relnode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import toolutils\n\nnode = hou.node(".")\nsopsolver = hou.node("..")\n\n# Attempt to discover a constraint network that we\'re wired to.\nnodetypes = ["constraintnetwork", "gluenetworkconstraint", "springnetworkconstraint"]\nfor nodetype in nodetypes:\n    network = toolutils.findOutputNodeOfBaseType(sopsolver, nodetype)\n    if network:\n        return node.relativePathTo(network)\n\nreturn "../.."' -l p $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1/relnode
chblockend
opparm -V 16.0.557 $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1 objpath1 ( '`stamps("..", "DATAPATH", chsop("relnode") + ":Relationships/" + chs(chsop("relnode") + "/relname") + "/" + chs(chsop("relnode") + "/relationship/dataname") + "/Geometry")`' ) relnode ( relnode )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1
opexprlanguage -s hscript $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1
opuserdata -n '___Version___' -v '16.0.557' $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1
opset -p on $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1
opcf $arg1

# Node $_obj_destruction_guides1_bullet_sim_sopsolver1_Break_All1 (Sop/attribwrangle)
set _obj_destruction_guides1_bullet_sim_sopsolver1_Break_All1 = `run("opadd -e -n -v attribwrangle Break_All1")`
oplocate -x `$arg2 + 1.3748672906059625` -y `$arg3 + -2.4203172853816639` $_obj_destruction_guides1_bullet_sim_sopsolver1_Break_All1
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "node_vis_enabled"      label   "Visualization Enabled"         type    toggle  invisible       default { "1" }     }     multiparm {   name    "num_visualizers"       label   "Visualizers"   invisible       default 0       parmtag { "multistartoffset" "0" }      parm {      name        "vis_active#"       label       "Active #"          type        toggle      invisible       default     { "0" }         }       parm {      name        "vis_data#"         label       "Raw Data #"        type        string      invisible       nolabel         default     { "" }      parmtag     { "editor" "1" }        }     }  ' $_obj_destruction_guides1_bullet_sim_sopsolver1_Break_All1
opparm $_obj_destruction_guides1_bullet_sim_sopsolver1_Break_All1  bindings ( 0 ) groupbindings ( 0 ) num_visualizers ( 1 )
opparm $_obj_destruction_guides1_bullet_sim_sopsolver1_Break_All1 class ( primitive ) snippet ( 'float accel = @glue_force / @mass;\n\nif(i@breakable && f@strength>0)\n{\n    if(s@constraint_name == "Glue")\n    if(accel > f@break_accel*f@strength || f@force > f@break_force)\n           setprimgroup(0,"broken",@primnum,1);  \n    \n    if(s@constraint_name == "ConeTwist")\n    if(f@angle > f@max_angle || f@torque > f@max_torque)\n        removeprim(0,@primnum,0);\n        \n    if(s@constraint_name == "Hard")\n    if(f@distance > f@max_distance || f@force > f@max_force)\n        removeprim(0,@primnum,0);\n}    \n    \n    \n    \n    \n    ' ) node_vis_enabled ( off ) num_visualizers ( 1 ) vis_active0 ( on ) vis_data0 ( '{\n  "flags":{\n             "type":"int",\n         "value":27\n    },\n    "icon":{\n              "type":"string",\n              "value":"VIEW_visualization_marker"\n   },\n    "label":{\n             "type":"string",\n              "value":"Marker 1"\n    },\n    "name":{\n              "type":"string",\n              "value":"vis_marker_1"\n        },\n    "parameters":{\n                "type":"string",\n              "value":"{\\nversion 0.8\\nstyle\\t[ 0\\tlocks=0 ]\\t(\\t\\"text\\"\\t)\\nclass\\t[ 0\\tlocks=0 ]\\t(\\t\\"primitive\\"\\t)\\nattrib\\t[ 0\\tlocks=0 ]\\t(\\t\\"break_force breakable\\"\\t)\\nvisibility\\t[ 0\\tlocks=0 ]\\t(\\t\\"always\\"\\t)\\ndecorradius\\t[ 0\\tlocks=0 ]\\t(\\t0.5\\t)\\ngroup\\t[ 0\\tlocks=0 ]\\t(\\t\\"\\"\\t)\\npointsize\\t[ 0\\tlocks=0 ]\\t(\\t3\\t)\\nlengthscale\\t[ 0\\tlocks=0 ]\\t(\\t1\\t)\\nunitlength\\t[ 0\\tlocks=0 ]\\t(\\t1\\t)\\nnormalize\\t[ 0\\tlocks=0 ]\\t(\\t\\"off\\"\\t)\\narrowheads\\t[ 0\\tlocks=0 ]\\t(\\t\\"off\\"\\t)\\nvectorcoloring\\t[ 0\\tlocks=0 ]\\t(\\t\\"fixed\\"\\t)\\ncolorattrib\\t[ 0\\tlocks=0 ]\\t(\\tCd\\t)\\nramptype\\t[ 0\\tlocks=0 ]\\t(\\t\\"false\\"\\t)\\ncolorramp\\t[ 0\\tlocks=0 ]\\t(\\t2\\t)\\nrangespec\\t[ 0\\tlocks=0 ]\\t(\\t\\"min-max\\"\\t)\\nminscalar\\t[ 0\\tlocks=0 ]\\t(\\t0\\t)\\nmaxscalar\\t[ 0\\tlocks=0 ]\\t(\\t1\\t)\\ncenterscalar\\t[ 0\\tlocks=0 ]\\t(\\t0\\t)\\nwidthscalar\\t[ 0\\tlocks=0 ]\\t(\\t1\\t)\\nclamptype\\t[ 0\\tlocks=0 ]\\t(\\t\\"edge\\"\\t)\\ntreatasscalar\\t[ 0\\tlocks=0 ]\\t(\\t\\"off\\"\\t)\\nusing\\t[ 0\\tlocks=0 ]\\t(\\t\\"comp\\"\\t)\\ncomponent\\t[ 0\\tlocks=0 ]\\t(\\t0\\t)\\nrefvec\\t[ 0\\tlocks=0 ]\\t(\\t0\\t1\\t0\\t)\\nmarkercolor\\t[ 0\\tlocks=0 ]\\t(\\t1\\t1\\t0\\t1\\t)\\ntrail\\t[ 0\\tlocks=0 ]\\t(\\t1\\t1\\t0\\t0.5\\t)\\ntextcolor\\t[ 0\\tlocks=0 ]\\t(\\t0.25\\t0.75\\t0.75\\t)\\nfontsize\\t[ 0\\tlocks=0 ]\\t(\\t\\"guidefont\\"\\t)\\nxcolor\\t[ 0\\tlocks=0 ]\\t(\\t1\\t0\\t0\\t1\\t)\\nycolor\\t[ 0\\tlocks=0 ]\\t(\\t0\\t1\\t0\\t1\\t)\\nzcolor\\t[ 0\\tlocks=0 ]\\t(\\t0\\t0\\t1\\t1\\t)\\ncolorramp1pos\\t[ 0\\tlocks=0 ]\\t(\\t0\\t)\\ncolorramp1c\\t[ 0\\tlocks=0 ]\\t(\\t0\\t0\\t1\\t)\\ncolorramp1interp\\t[ 0\\tlocks=0 ]\\t(\\t\\"linear\\"\\t)\\ncolorramp2pos\\t[ 0\\tlocks=0 ]\\t(\\t1\\t)\\ncolorramp2c\\t[ 0\\tlocks=0 ]\\t(\\t1\\t0\\t0\\t)\\ncolorramp2interp\\t[ 0\\tlocks=0 ]\\t(\\t\\"linear\\"\\t)\\n}\\n"},\n \n      "scope":{\n             "type":"int",\n         "value":2\n     },\n    "type":{\n              "type":"string",\n              "value":"vis_marker"\n  }\n}\n' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_destruction_guides1_bullet_sim_sopsolver1_Break_All1
opexprlanguage -s hscript $_obj_destruction_guides1_bullet_sim_sopsolver1_Break_All1
opuserdata -n '___Version___' -v '' $_obj_destruction_guides1_bullet_sim_sopsolver1_Break_All1
opset -p on $_obj_destruction_guides1_bullet_sim_sopsolver1_Break_All1
opcf $arg1

# Node $_obj_destruction_guides1_bullet_sim_sopsolver1_color5 (Sop/color)
set _obj_destruction_guides1_bullet_sim_sopsolver1_color5 = `run("opadd -e -n -v color color5")`
oplocate -x `$arg2 + 0.0012500286102294922` -y `$arg3 + -3.3524053284861637` $_obj_destruction_guides1_bullet_sim_sopsolver1_color5
opparm $_obj_destruction_guides1_bullet_sim_sopsolver1_color5  ramp ( 2 )
opparm $_obj_destruction_guides1_bullet_sim_sopsolver1_color5 group ( broken ) grouptype ( prims ) color ( 0.90000000000000002 0 0 ) ramp2pos ( 1 ) ramp2c ( 1 1 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_destruction_guides1_bullet_sim_sopsolver1_color5
opexprlanguage -s hscript $_obj_destruction_guides1_bullet_sim_sopsolver1_color5
opuserdata -n '___Version___' -v '' $_obj_destruction_guides1_bullet_sim_sopsolver1_color5
opuserdata -n '___toolcount___' -v '2' $_obj_destruction_guides1_bullet_sim_sopsolver1_color5
opuserdata -n '___toolid___' -v 'sop_color' $_obj_destruction_guides1_bullet_sim_sopsolver1_color5
opset -p on $_obj_destruction_guides1_bullet_sim_sopsolver1_color5
opcf $arg1

# Node $_obj_destruction_guides1_bullet_sim_sopsolver1_calculate_force_and_mass1 (Sop/attribwrangle)
set _obj_destruction_guides1_bullet_sim_sopsolver1_calculate_force_and_mass1 = `run("opadd -e -n -v attribwrangle calculate_force_and_mass1")`
oplocate -x `$arg2 + 1.3748672906059625` -y `$arg3 + -0.99652913107731678` $_obj_destruction_guides1_bullet_sim_sopsolver1_calculate_force_and_mass1
opparm $_obj_destruction_guides1_bullet_sim_sopsolver1_calculate_force_and_mass1  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_destruction_guides1_bullet_sim_sopsolver1_calculate_force_and_mass1 snippet ( 'int pt = findattribval(1,"point","name",(@name));\n\nv@preal = point(1,"P",pt);\n\nf@mass = point(1, "mass",pt);\nf@force = length(vector(point(1,"force",pt)));\n\n\n\n\n' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_destruction_guides1_bullet_sim_sopsolver1_calculate_force_and_mass1
opexprlanguage -s hscript $_obj_destruction_guides1_bullet_sim_sopsolver1_calculate_force_and_mass1
opuserdata -n '___Version___' -v '' $_obj_destruction_guides1_bullet_sim_sopsolver1_calculate_force_and_mass1
opset -p on $_obj_destruction_guides1_bullet_sim_sopsolver1_calculate_force_and_mass1
opcf $arg1

# Node $_obj_destruction_guides1_bullet_sim_sopsolver1_dopimport2 (Sop/dopimport)
set _obj_destruction_guides1_bullet_sim_sopsolver1_dopimport2 = `run("opadd -e -n -v dopimport dopimport2")`
oplocate -x `$arg2 + 3.6674627233702708` -y `$arg3 + -0.0015500000445172191` $_obj_destruction_guides1_bullet_sim_sopsolver1_dopimport2
chblockbegin
chadd -t 0 0 $_obj_destruction_guides1_bullet_sim_sopsolver1_dopimport2 integrateovertime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1/$FPS' $_obj_destruction_guides1_bullet_sim_sopsolver1_dopimport2/integrateovertime
chblockend
opparm -V 16.0.557 $_obj_destruction_guides1_bullet_sim_sopsolver1_dopimport2 doppath ( ../.. ) importstyle ( pack )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_destruction_guides1_bullet_sim_sopsolver1_dopimport2
opexprlanguage -s hscript $_obj_destruction_guides1_bullet_sim_sopsolver1_dopimport2
opuserdata -n '___Version___' -v '16.0.557' $_obj_destruction_guides1_bullet_sim_sopsolver1_dopimport2
opset -p on $_obj_destruction_guides1_bullet_sim_sopsolver1_dopimport2
opcf $arg1

# Node $_obj_destruction_guides1_bullet_sim_sopsolver1_attribpromote2 (Sop/attribpromote)
set _obj_destruction_guides1_bullet_sim_sopsolver1_attribpromote2 = `run("opadd -e -n -v attribpromote attribpromote2")`
oplocate -x `$arg2 + 1.374417292068884` -y `$arg3 + -1.6744202190056185` $_obj_destruction_guides1_bullet_sim_sopsolver1_attribpromote2
opparm -V 16.0.557 $_obj_destruction_guides1_bullet_sim_sopsolver1_attribpromote2 inname ( 'force mass preal' ) outclass ( primitive )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_destruction_guides1_bullet_sim_sopsolver1_attribpromote2
opexprlanguage -s hscript $_obj_destruction_guides1_bullet_sim_sopsolver1_attribpromote2
opuserdata -n '___Version___' -v '16.0.557' $_obj_destruction_guides1_bullet_sim_sopsolver1_attribpromote2
opset -p on $_obj_destruction_guides1_bullet_sim_sopsolver1_attribpromote2

opcf $arg1
opcf $arg1
opwire -n $_obj_destruction_guides1_bullet_sim_sopsolver1_attribpromote2 -0 $_obj_destruction_guides1_bullet_sim_sopsolver1_Break_All1
opcf $arg1
opwire -n $_obj_destruction_guides1_bullet_sim_sopsolver1_Break_All1 -0 $_obj_destruction_guides1_bullet_sim_sopsolver1_color5
opcf $arg1
opwire -n $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1 -0 $_obj_destruction_guides1_bullet_sim_sopsolver1_calculate_force_and_mass1
opwire -n $_obj_destruction_guides1_bullet_sim_sopsolver1_dopimport2 -1 $_obj_destruction_guides1_bullet_sim_sopsolver1_calculate_force_and_mass1
opcf $arg1
opcf $arg1
opwire -n $_obj_destruction_guides1_bullet_sim_sopsolver1_calculate_force_and_mass1 -0 $_obj_destruction_guides1_bullet_sim_sopsolver1_attribpromote2

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_destruction_guides1_bullet_sim_sopsolver1_attribpromote2
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="Break C based on tres" label="Break C based on tres" icon="MISC_generic">
    <toolMenuContext name="network">
      <contextOpType>Sop/color</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('object_merge'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_destruction_guides1_bullet_sim_sopsolver1_color7 (Sop/color)
set _obj_destruction_guides1_bullet_sim_sopsolver1_color7 = `run("opadd -e -n -v color color7")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_destruction_guides1_bullet_sim_sopsolver1_color7
opparm $_obj_destruction_guides1_bullet_sim_sopsolver1_color7  ramp ( 2 )
opparm $_obj_destruction_guides1_bullet_sim_sopsolver1_color7 group ( broken ) grouptype ( prims ) color ( 0.90000000000000002 0 0 ) ramp2pos ( 1 ) ramp2c ( 1 1 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_destruction_guides1_bullet_sim_sopsolver1_color7
opexprlanguage -s hscript $_obj_destruction_guides1_bullet_sim_sopsolver1_color7
opuserdata -n '___Version___' -v '' $_obj_destruction_guides1_bullet_sim_sopsolver1_color7
opuserdata -n '___toolcount___' -v '2' $_obj_destruction_guides1_bullet_sim_sopsolver1_color7
opuserdata -n '___toolid___' -v 'sop_color' $_obj_destruction_guides1_bullet_sim_sopsolver1_color7
opset -p on $_obj_destruction_guides1_bullet_sim_sopsolver1_color7
opcf $arg1

# Node $_obj_destruction_guides1_bullet_sim_sopsolver1_import (Sop/dopimport)
set _obj_destruction_guides1_bullet_sim_sopsolver1_import = `run("opadd -e -n -v dopimport import")`
oplocate -x `$arg2 + 4.8724577643006839` -y `$arg3 + 3.9993947588653427` $_obj_destruction_guides1_bullet_sim_sopsolver1_import
chblockbegin
chadd -t 0 0 $_obj_destruction_guides1_bullet_sim_sopsolver1_import integrateovertime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1/$FPS' $_obj_destruction_guides1_bullet_sim_sopsolver1_import/integrateovertime
chblockend
opparm -V 16.0.557 $_obj_destruction_guides1_bullet_sim_sopsolver1_import doppath ( ../.. ) objpattern ( hero ) importstyle ( pack )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_destruction_guides1_bullet_sim_sopsolver1_import
opexprlanguage -s hscript $_obj_destruction_guides1_bullet_sim_sopsolver1_import
opuserdata -n '___Version___' -v '16.0.557' $_obj_destruction_guides1_bullet_sim_sopsolver1_import
opset -p on $_obj_destruction_guides1_bullet_sim_sopsolver1_import
opcf $arg1

# Node $_obj_destruction_guides1_bullet_sim_sopsolver1_attribwrangle1 (Sop/attribwrangle)
set _obj_destruction_guides1_bullet_sim_sopsolver1_attribwrangle1 = `run("opadd -e -n -v attribwrangle attribwrangle1")`
oplocate -x `$arg2 + 1.4174000000000007` -y `$arg3 + 0.92010000000000502` $_obj_destruction_guides1_bullet_sim_sopsolver1_attribwrangle1
opparm $_obj_destruction_guides1_bullet_sim_sopsolver1_attribwrangle1  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_destruction_guides1_bullet_sim_sopsolver1_attribwrangle1 class ( primitive ) snippet ( 'float dist = xyzdist(1,v@preal);\n\nfloat tres = detail(1,"break_dist"); \n\nif(dist < tres)\n    @group_broken=1;\n' )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_destruction_guides1_bullet_sim_sopsolver1_attribwrangle1
opexprlanguage -s hscript $_obj_destruction_guides1_bullet_sim_sopsolver1_attribwrangle1
opuserdata -n '___Version___' -v '' $_obj_destruction_guides1_bullet_sim_sopsolver1_attribwrangle1
opset -p on $_obj_destruction_guides1_bullet_sim_sopsolver1_attribwrangle1
opcf $arg1

# Node $_obj_destruction_guides1_bullet_sim_sopsolver1_cutters (Sop/object_merge)
set _obj_destruction_guides1_bullet_sim_sopsolver1_cutters = `run("opadd -e -n -v object_merge cutters")`
oplocate -x `$arg2 + 3.812880378079484` -y `$arg3 + 1.9723500000445284` $_obj_destruction_guides1_bullet_sim_sopsolver1_cutters
opparm $_obj_destruction_guides1_bullet_sim_sopsolver1_cutters  numobj ( 1 )
opparm -V 16.0.557 $_obj_destruction_guides1_bullet_sim_sopsolver1_cutters objpath1 ( '`opinputpath("../..",3)`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_destruction_guides1_bullet_sim_sopsolver1_cutters
opexprlanguage -s hscript $_obj_destruction_guides1_bullet_sim_sopsolver1_cutters
opuserdata -n '___Version___' -v '16.0.557' $_obj_destruction_guides1_bullet_sim_sopsolver1_cutters
opset -p on $_obj_destruction_guides1_bullet_sim_sopsolver1_cutters
opcf $arg1

# Node $_obj_destruction_guides1_bullet_sim_sopsolver1_promote (Sop/attribpromote)
set _obj_destruction_guides1_bullet_sim_sopsolver1_promote = `run("opadd -e -n -v attribpromote promote")`
oplocate -x `$arg2 + 1.4170000000000016` -y `$arg3 + 1.9708000000000112` $_obj_destruction_guides1_bullet_sim_sopsolver1_promote
opparm -V 16.0.557 $_obj_destruction_guides1_bullet_sim_sopsolver1_promote inname ( preal ) outclass ( primitive )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_destruction_guides1_bullet_sim_sopsolver1_promote
opexprlanguage -s hscript $_obj_destruction_guides1_bullet_sim_sopsolver1_promote
opuserdata -n '___Version___' -v '16.0.557' $_obj_destruction_guides1_bullet_sim_sopsolver1_promote
opset -p on $_obj_destruction_guides1_bullet_sim_sopsolver1_promote
opcf $arg1

# Node $_obj_destruction_guides1_bullet_sim_sopsolver1_calc_real_p (Sop/attribwrangle)
set _obj_destruction_guides1_bullet_sim_sopsolver1_calc_real_p = `run("opadd -e -n -v attribwrangle calc_real_p")`
oplocate -x `$arg2 + 1.4174000000000007` -y `$arg3 + 2.7406000000000077` $_obj_destruction_guides1_bullet_sim_sopsolver1_calc_real_p
opparm $_obj_destruction_guides1_bullet_sim_sopsolver1_calc_real_p  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_destruction_guides1_bullet_sim_sopsolver1_calc_real_p snippet ( 'int pt = findattribval(1,"point","name",(@name));\nv@preal = point(1,"P",pt);\n\n\n\n' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_destruction_guides1_bullet_sim_sopsolver1_calc_real_p
opexprlanguage -s hscript $_obj_destruction_guides1_bullet_sim_sopsolver1_calc_real_p
opuserdata -n '___Version___' -v '' $_obj_destruction_guides1_bullet_sim_sopsolver1_calc_real_p
opset -p on $_obj_destruction_guides1_bullet_sim_sopsolver1_calc_real_p
opcf $arg1

# Node $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1 (Sop/object_merge)
set _obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1 = `run("opadd -e -n -v object_merge relationship_geometry1")`
oplocate -x `$arg2 + 1.187683862433861` -y `$arg3 + 4.0009447589098599` $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1
opspareds '    group {  name    "folder0"       label   "Object Merge"          parm {      name        "xformtype"         baseparm        label       "Transform"         export      none    }       parm {      name        "xformpath"         baseparm        label       "Transform Object"          export      none    }       parm {      name        "invertxform"       baseparm        label       "Invert Transform"          export      none    }       parm {      name        "createptgroups"            baseparm        label       "Create Point Groups"       export      none    }       parm {      name        "ptgroupprefix"             baseparm        label       "Point Group Prefix"        export      none    }       parm {      name        "createprimgroups"          baseparm        label       "Create Primitive Groups"           export      none    }       parm {      name        "primgroupprefix"           baseparm        label       "Primitive Group Prefix"            export      none    }       parm {      name        "verbosegroups"             baseparm        label       "Verbose Group Names"       export      none    }       parm {      name        "createptstring"            baseparm        label       "Create Per-Point Path"             export      none    }       parm {      name        "createprimstring"          baseparm        label       "Create Per-Primitive Path"         export      none    }       parm {      name        "pathattrib"        baseparm        label       "Path Attribute"            export      none    }       parm {      name        "pack"      baseparm        label       "Pack Geometry Before Merging"      export      none    }       parm {      name        "pivot"             baseparm        label       "Pivot Location"            export      none    }       parm {      name        "viewportlod"       baseparm        label       "Display As"        export      none    }       parm {      name        "addpath"           baseparm        label       "Add Path Attribute"        export      none    }       parm {      name        "_separator"        baseparm        label       ""          export      none    }       multiparm {         name        "numobj"            label       "Number of Objects"         baseparm        default     1           parm {              name    "enable#"               baseparm                label   "Enable Merge #"                export  none        }       parm {              name    "objpath#"              baseparm                label   "Object #"              export  none        }       parm {              name    "group#"                baseparm                label   "Group #"               export  none        }       parm {              name    "expand#"               baseparm                label   "Expand Group #"                export  none        }   }      }      group {   name    "folder0_1"     label   "Custom Parameters"     parm {      name        "relnode"           label       "Relationship"      type        oppath      default     { "../.." }         range       { 0 1 }             parmtag     { "opfilter" "!!DOP!!" }            parmtag     { "oprelative" "." }    }     }      parm {     name    "suffixfirstgroup"      baseparm        label   "Add Suffix to First Group"     export  none     } ' $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1
opparm $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1  numobj ( 1 )
chblockbegin
chadd -t 0 0 $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1 relnode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import toolutils\n\nnode = hou.node(".")\nsopsolver = hou.node("..")\n\n# Attempt to discover a constraint network that we\'re wired to.\nnodetypes = ["constraintnetwork", "gluenetworkconstraint", "springnetworkconstraint"]\nfor nodetype in nodetypes:\n    network = toolutils.findOutputNodeOfBaseType(sopsolver, nodetype)\n    if network:\n        return node.relativePathTo(network)\n\nreturn "../.."' -l p $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1/relnode
chblockend
opparm -V 16.0.557 $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1 objpath1 ( '`stamps("..", "DATAPATH", chsop("relnode") + ":Relationships/" + chs(chsop("relnode") + "/relname") + "/" + chs(chsop("relnode") + "/relationship/dataname") + "/Geometry")`' ) relnode ( relnode )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1
opexprlanguage -s hscript $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1
opuserdata -n '___Version___' -v '16.0.557' $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1
opset -p on $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1

opcf $arg1
opwire -n $_obj_destruction_guides1_bullet_sim_sopsolver1_attribwrangle1 -0 $_obj_destruction_guides1_bullet_sim_sopsolver1_color7
opcf $arg1
opcf $arg1
opwire -n $_obj_destruction_guides1_bullet_sim_sopsolver1_promote -0 $_obj_destruction_guides1_bullet_sim_sopsolver1_attribwrangle1
opwire -n $_obj_destruction_guides1_bullet_sim_sopsolver1_cutters -1 $_obj_destruction_guides1_bullet_sim_sopsolver1_attribwrangle1
opcf $arg1
opcf $arg1
opwire -n $_obj_destruction_guides1_bullet_sim_sopsolver1_calc_real_p -0 $_obj_destruction_guides1_bullet_sim_sopsolver1_promote
opcf $arg1
opwire -n $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1 -0 $_obj_destruction_guides1_bullet_sim_sopsolver1_calc_real_p
opwire -n $_obj_destruction_guides1_bullet_sim_sopsolver1_import -1 $_obj_destruction_guides1_bullet_sim_sopsolver1_calc_real_p
opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_destruction_guides1_bullet_sim_sopsolver1_relationship_geometry1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_destruction_guides1_bullet_sim_sopsolver1_color7
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>
</shelfDocument>
