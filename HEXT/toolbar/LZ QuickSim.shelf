<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="LZ QuickSim" label="LZ QuickSim">
    <memberTool name="LZ quick Bullet"/>
  </toolshelf>

  <tool name="LZ quick Bullet" label="LZ quick Bullet" icon="hicon:/SVGIcons.index?DOP_bulletsolver.svg">
    <toolMenuContext name="network">
      <contextOpType>Sop/assemble</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('dopnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_RS_geo1_assemble (Sop/assemble)
set _obj_RS_geo1_assemble = `run("opadd -e -n -v assemble assemble")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_RS_geo1_assemble
opparm -V 1 $_obj_RS_geo1_assemble pack_geo ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_RS_geo1_assemble
opexprlanguage -s hscript $_obj_RS_geo1_assemble
opuserdata -n '___Version___' -v '1' $_obj_RS_geo1_assemble
opuserdata -n '___toolcount___' -v '5' $_obj_RS_geo1_assemble
opuserdata -n '___toolid___' -v 'dop_rbdfracturedobject' $_obj_RS_geo1_assemble
opset -p on $_obj_RS_geo1_assemble
opcf $arg1

# Node $_obj_RS_geo1_quick_bullet (Sop/dopnet)
set _obj_RS_geo1_quick_bullet = `run("opadd -e -n -v dopnet quick_bullet")`
oplocate -x `$arg2 + 0` -y `$arg3 + -0.83783823513513511` $_obj_RS_geo1_quick_bullet
opparm $_obj_RS_geo1_quick_bullet  numobj ( 1 )
chblockbegin
chadd -t 0 0 $_obj_RS_geo1_quick_bullet timestep
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("timescale")/(ch("substep")*$FPS)' $_obj_RS_geo1_quick_bullet/timestep
chadd -t 0 0 $_obj_RS_geo1_quick_bullet timeoffset
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '(ch("startframe")-1)/$FPS' $_obj_RS_geo1_quick_bullet/timeoffset
chblockend
opparm -V 16.5.268 $_obj_RS_geo1_quick_bullet objname1 ( r* )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_RS_geo1_quick_bullet
opexprlanguage -s hscript $_obj_RS_geo1_quick_bullet
opuserdata -n '___Version___' -v '16.5.268' $_obj_RS_geo1_quick_bullet
opcf $_obj_RS_geo1_quick_bullet

# Node $_obj_RS_geo1_quick_bullet_groundplane1 (Dop/groundplane)
set _obj_RS_geo1_quick_bullet_groundplane1 = `run("opadd -e -n -v groundplane groundplane1")`
oplocate -x `$arg2 + -2.4954932432432435` -y `$arg3 + 1.919515675720193` $_obj_RS_geo1_quick_bullet_groundplane1
opset -d off -r off -h off -f off -y off -t on -l off -s off -u off -F on -c on -e on -b off $_obj_RS_geo1_quick_bullet_groundplane1
opexprlanguage -s hscript $_obj_RS_geo1_quick_bullet_groundplane1
opuserdata -n '___Version___' -v '' $_obj_RS_geo1_quick_bullet_groundplane1
opuserdata -n '___toolcount___' -v '1' $_obj_RS_geo1_quick_bullet_groundplane1
opuserdata -n '___toolid___' -v 'dop_groundplane' $_obj_RS_geo1_quick_bullet_groundplane1

# Node $_obj_RS_geo1_quick_bullet_rigidbodysolver1 (Dop/rigidbodysolver)
set _obj_RS_geo1_quick_bullet_rigidbodysolver1 = `run("opadd -e -n -v rigidbodysolver rigidbodysolver1")`
oplocate -x `$arg2 + -0.0034499930543994139` -y `$arg3 + 2.8549033333333336` $_obj_RS_geo1_quick_bullet_rigidbodysolver1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_RS_geo1_quick_bullet_rigidbodysolver1
opexprlanguage -s hscript $_obj_RS_geo1_quick_bullet_rigidbodysolver1
opuserdata -n '___Version___' -v '2' $_obj_RS_geo1_quick_bullet_rigidbodysolver1
opuserdata -n '___toolcount___' -v '7' $_obj_RS_geo1_quick_bullet_rigidbodysolver1
opuserdata -n '___toolid___' -v 'dop_rbdglueobject' $_obj_RS_geo1_quick_bullet_rigidbodysolver1

# Node $_obj_RS_geo1_quick_bullet_rbdpackedobject1 (Dop/rbdpackedobject)
set _obj_RS_geo1_quick_bullet_rbdpackedobject1 = `run("opadd -e -n -v rbdpackedobject rbdpackedobject1")`
oplocate -x `$arg2 + 2.0162964076142487e-09` -y `$arg3 + 3.6747236036036033` $_obj_RS_geo1_quick_bullet_rbdpackedobject1
chblockbegin
chadd -t 0 0 $_obj_RS_geo1_quick_bullet_rbdpackedobject1 createframe
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch(opcreator(".")+"/startframe")' $_obj_RS_geo1_quick_bullet_rbdpackedobject1/createframe
chadd -t 0 0 $_obj_RS_geo1_quick_bullet_rbdpackedobject1 bullet_shrink_amount
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("bullet_collision_margin")' $_obj_RS_geo1_quick_bullet_rbdpackedobject1/bullet_shrink_amount
chblockend
opparm -V 4 $_obj_RS_geo1_quick_bullet_rbdpackedobject1 geosource ( first )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_RS_geo1_quick_bullet_rbdpackedobject1
opexprlanguage -s hscript $_obj_RS_geo1_quick_bullet_rbdpackedobject1
opuserdata -n '___Version___' -v '4' $_obj_RS_geo1_quick_bullet_rbdpackedobject1
opuserdata -n '___toolcount___' -v '3' $_obj_RS_geo1_quick_bullet_rbdpackedobject1
opuserdata -n '___toolid___' -v 'dop_rbdpackedobject' $_obj_RS_geo1_quick_bullet_rbdpackedobject1
opcf ..
opcf $_obj_RS_geo1_quick_bullet

# Node $_obj_RS_geo1_quick_bullet_output (Dop/output)
set _obj_RS_geo1_quick_bullet_output = `run("opadd -e -n -v output output")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_RS_geo1_quick_bullet_output
chblockbegin
chadd -t 0 0 $_obj_RS_geo1_quick_bullet_output f1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_RS_geo1_quick_bullet_output/f1
chadd -t 0 0 $_obj_RS_geo1_quick_bullet_output f2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_RS_geo1_quick_bullet_output/f2
chblockend
opparm $_obj_RS_geo1_quick_bullet_output
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_RS_geo1_quick_bullet_output
opexprlanguage -s hscript $_obj_RS_geo1_quick_bullet_output
opuserdata -n '___Version___' -v '' $_obj_RS_geo1_quick_bullet_output

# Node $_obj_RS_geo1_quick_bullet_gravity1 (Dop/gravity)
set _obj_RS_geo1_quick_bullet_gravity1 = `run("opadd -e -n -v gravity gravity1")`
oplocate -x `$arg2 + 1.5986135060722742e-08` -y `$arg3 + 1.9179656756756758` $_obj_RS_geo1_quick_bullet_gravity1
chblockbegin
chadd -t 0 0 $_obj_RS_geo1_quick_bullet_gravity1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'constant()' $_obj_RS_geo1_quick_bullet_gravity1/activation
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_RS_geo1_quick_bullet_gravity1
opexprlanguage -s hscript $_obj_RS_geo1_quick_bullet_gravity1
opuserdata -n '___Version___' -v '16.5.268' $_obj_RS_geo1_quick_bullet_gravity1

# Node $_obj_RS_geo1_quick_bullet_merge1 (Dop/merge)
set _obj_RS_geo1_quick_bullet_merge1 = `run("opadd -e -n -v merge merge1")`
oplocate -x `$arg2 + -0.0011500099999999999` -y `$arg3 + 0.89995099999999995` $_obj_RS_geo1_quick_bullet_merge1
chblockbegin
chadd -t 0 0 $_obj_RS_geo1_quick_bullet_merge1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'constant()' $_obj_RS_geo1_quick_bullet_merge1/activation
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_RS_geo1_quick_bullet_merge1
opexprlanguage -s hscript $_obj_RS_geo1_quick_bullet_merge1
opuserdata -n '___Version___' -v '16.5.268' $_obj_RS_geo1_quick_bullet_merge1
oporder -e output gravity1 groundplane1 merge1 rigidbodysolver1 rbdpackedobject1 
opcf ..
opset -p on $_obj_RS_geo1_quick_bullet

opcf $arg1
opwire -n $_obj_RS_geo1_polyextrude1 -0 $_obj_RS_geo1_assemble
opcf $arg1
opwire -n $_obj_RS_geo1_assemble -0 $_obj_RS_geo1_quick_bullet
opcf $_obj_RS_geo1_quick_bullet
opwire -n $_obj_RS_geo1_quick_bullet_merge1 -0 $_obj_RS_geo1_quick_bullet_output
opwire -n $_obj_RS_geo1_quick_bullet_rigidbodysolver1 -0 $_obj_RS_geo1_quick_bullet_gravity1
opwire -n $_obj_RS_geo1_quick_bullet_groundplane1 -0 $_obj_RS_geo1_quick_bullet_merge1
opwire -n $_obj_RS_geo1_quick_bullet_gravity1 -1 $_obj_RS_geo1_quick_bullet_merge1
opwire -n $_obj_RS_geo1_quick_bullet_rbdpackedobject1 -0 $_obj_RS_geo1_quick_bullet_rigidbodysolver1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_RS_geo1_quick_bullet
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_RS_geo1_assemble
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>
</shelfDocument>
