{
	"01 1D Noises":{
	
		"Turb: 1D: Original Perlin" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'float','ofn')"},
		"Turb: 1D: Alligator" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'float','afn')"},
		"Turb: 1D: Sparse Convultion" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'float','sfn')"},
		"Turb: 1D: Simplex" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'float','xfn')"},
		"Turb: 1D: Perlin" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'float','pfn')"},
		"Turb: 1D: Corrected Perlin" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'float','cfn')"},

				
		"AA: 1D: Perlin" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'float','apfn')"},		
		"AA: 1D: Simplex" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'float','asfn')"},		
		
		"Other: 1D: Worley Seed" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'float','wseed')"},		
		"Other: 1D: Worley F1" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'float','wf1')"},
		"Other: 1D: Worley F2" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'float','wf2')"},
		"Other: 1D: Boxes" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'float','boxes')"},
		"Other: 1D: Spheres" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'float','spheres')"}		
		},
	"02 3D noises":{	
		"Turb: 3D: Original Perlin" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'vector','ovn')"},
		"Turb: 3D: Alligator" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'vector','avn')"},	
		"Turb: 3D: Sparse Convultion" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'vector','svn')"},	
		"Turb: 3D: Simplex" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'vector','xvn')"},
		"Turb: 3D: Perlin" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'vector','pvn')"},
		"Turb: 3D: Corrected Perlin" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'vector','cvn')"},
				
				
		"AA: 3D: Perlin" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'vector','apvn')"},		
		"AA: 3D: Simplex" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'vector','asvn')"},			
		
		"CURL: 3D: Perlin" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'vector','cpn')"},
		"CURL: 3D: Original Perlin" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'vector','con')"},
		"CURL: 3D: Sparse Convultion" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'vector','csn')"},
		"CURL: 3D: Alligator" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'vector','can')"},
		"CURL: 3D: Simplex" : {
				"action":"lzutil.addNoiseScriptAndParmsToSnippet(n,'vector','cxn')"}
		},
		
	"03 Noise Process":{
		"01. Vector displace" : {
				"code":"@P += n1;"},
		"02. Displace along normal" : {
				"code":"@P += @N*n1;"},	
		"03. Dont Export N" : {
			"action":"n.parm('vex_outputmask').set('* ^N')"	},
		"04. Delete N Attribute(point)" : {
			"action":"n.createOutputNode('attribdelete').parm('ptdel').set('N')"}
		},	
		
	"04 UTIL Scripts":{
		"01. Include lzn.h" : {
				"action":"lzutil.includeAddSafe(n,'lzn')"},	
		"02. Remove by Tres(points)" :{
				"code":"if(rand(@ptnum)<chf('tres')) removepoint(0,@ptnum);"},
		"03. Read Texture" :{
				"code":"v@Cd = texture(chs('texture_path'),@uv.x,@uv.y);"},
		"04. Extract intrinstic xform" :{
				"code":"v@pivot = primintrinsic(0,'pivot',@ptnum);\n3@transfrom = primintrinsic(0,'transform',@ptnum);"},
		"05. Move To Points" :{
				"code":"int pt = nametopoint(1,s@name);\nmatrix3 t = point(1,'t',pt);\nvector pivot = point(1,'pivot',pt);\nsetprimintrinsic(0,'transform',@ptnum,t);\n@P = point(1,'P',pt);"}		
				
				
		},		
				
	"05 Model":{
		"00. Null" : {"node":"null"},
		"01. Duplicate" : {"node":"copyxform"},
		"02. Polyextrude" : {"node":"polyextrude"},
		"03. Bevel" : {"node":"polybevel"},
		"04. Subdivide" : {"node":"subdivide"},
		"05. Copy To Points" : {"node":"copytopoints"},
		"06. Transform" : {"node":"xform"},
		"07. Polyframe" : {"node":"polyframe"}
		},
		
	"06 Nodes":{
		"01. Wrangle" : {"node":"attribwrangle"},
		"02. AttribDelete" : {"node":"attribdelete"},
		"03. AttribPromote" : {"node":"attribpromote"}
		},
		
	"07 UTIL(Actions)":{
		"01. Open HEXT Folder" : {
			"action":"lzutil.openFolderFromEnv('$HEXT')"},
		"02. Open HC Folder" : {
			"action":"lzutil.openFolderFromEnv('$HC/$HIPNAME')"},
		"03. Open HMEGA Folder" : {
			"action":"lzutil.openFolderFromEnv('$HMEGA')"},	
		"02. Open Documents Folder" : {
			"action":"lzutil.openFolderFromEnv('$HOUDINI_USER_PREF_DIR')"}		
			
	}
}




















